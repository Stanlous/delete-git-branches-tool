#!/bin/bash

getParams () {
  while true; 
  do
    if [[ $# -eq 0 ]]; then
      break
    fi
    case $1 in
      -k|--key)
        if [ "$2" ]; 
        then
          branchKeyword=$2
          shift
        else
          echo 'ERROR: "-k|--key" requires a non-empty option argument.'
          exit 1
        fi
        ;;
      --key=?*)
        branchKeyword=${1#*=}
        ;;
      -|-?*)
        printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
        ;; 
      *)
        branchNames[$branchNamesIndex]=$1
        branchNamesIndex=$(($branchNamesIndex + 1))
        ;;
    esac
    shift
  done

  # echo '-----branches----'
  # for i in ${branchNames[@]}
  # do
  #   echo $i
  # done

  # echo '-------key-----'
  # echo $branchKeyword
}

checkParams () {
  if [[ ! "$branchKeyword" && "${#branchNames[@]}" -eq 0 ]]; 
  then 
    echo 'Error: No argument found!'
    exit 1
  fi
}

showBranches () {
  echo ---- branches to be deleted -----
  for branch in $branchesToBeDeleted
  do
    echo $branch
  done
  echo ---------------------------------
}

setBranches () {
  if [[ "$branchKeyword" ]];
  then
    result=$(git branch | grep "$branchKeyword")
    branchesToBeDeleted=${result//\*/}
  else
    branchesToBeDeleted=${branchNames[@]}
  fi
}

delete () {
  echo delete
}

deleteBranches () {
  while true;
  do
    read -p "Are you sure you want to delete them? [y/n]: " input
    case $input in
      [yY][eE][sS]|[yY])
      delete
      exit 0
      ;;
      [nN][oO]|[nN])
      exit 0
      ;;
      *)
      echo "Please enter 'y' or 'n' !"
      ;;
    esac
  done
}


declare -a branchNames 
declare -a branchesToBeDeleted 
branchNamesIndex=0
branchKeyword=


getParams $@
checkParams 
setBranches
showBranches
deleteBranches


